"""
面试题 17.09. 第 k 个数


由题设可知，起始的几个素数是1、3、5、7，其中基础因子是3、5、7;
后续的素数由3、5、7这三个数互相乘法结合(也就是因式分解后只有3、5、7这3个因子);
设num3、num5、num7代表3、5、7要取答案队列中第几位的数来进行相乘(如3、5、7就是与队列中第一位的1分别相乘的结果; 9、15、21则为第二位3分别相乘的结果);
后续数规律: 3中各自在答案队列中取得的数乘以自身(3、5、7), 取三者间最小的数为下一个入队的数, 并且要将入答案队列的对应数加1
由上述1-4步可知：

设置num3、num5、num7分别存储取答案队列第几个数进行相乘判断，初始值可取0或1
答案队列初始可为[1]或[1, 3, 5, 7],其对应1中初始值分别为0、1
这边让k为4内的可直接返回答案
"""

class Solution:
    def getKthMagicNumber(self, k: int) -> int:
        num1, num2, num3 = 0, 0, 0
        q = [1]
        for i in range(1, k):
            next_num = min(q[num1] * 3, q[num2] * 5, q[num3] * 7)
            q.append(next_num)
            if next_num == q[num1] * 3:
                num1 += 1
            if next_num == q[num2] * 5:
                num2 += 1
            if next_num == q[num3] * 7:
                num3 += 1
        return q[-1]




