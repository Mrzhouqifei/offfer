"""
给定一个数组n，然后给三个长度为n的数组，可以从这三个数组中选出一个长度为n的数组，第i个位置需要是从给出的三个数组第i个位置选择的，
然后要求使这个数组后一项减前一项的绝对值之和最小。
输入示例：：
5
5 9  5 4  4
4 7  4 10 3
2 10 9 2  3
这里可以选择5 7 5 4 4，所以输出等于|7-5|+|5-7|+|4-5|+|4-4|=5。所以输出就是5。
"""

# n = int(input())
# arr = []
# for i in range(3):
#     arr.append(list(map(int, input().split())))
# dp = [[0 for i in range(3)] for j in range(n)]
# # print(arr)
# for i in range(1, n):
#     for j in range(3):
#         dp[i][j] = min([(dp[i-1][k] + abs(arr[j][i]-arr[k][i-1])) for k in range(3)])
# print(min(dp[n-1]))

"""
给出一个二维矩阵，这个矩阵的每一行和每一列都是一个独立的等差数列，其中一些数据缺失了，现在需要推理隐藏但是可以被唯一确定的数字，然后对输入的查询进行回答。

输入描述：
第一行，n,m,q分别表示矩阵的行数，列数和查询的条数。
接下来的n行，每行m个数表示这个矩阵，0表示缺失数据。−109≤Aij≤109-10^9≤A_{ij}≤10^9−10 
9
 ≤A 
ij
​	
 ≤10 
9
 
接下来q行，每行两个数字i,j表示对矩阵中第i行第j列的数字进行查询。

输出描述：
如果可以确定该位置的数字，则输出数字，如果不能确定则输出UNKNOWN。

输入示例：
2 3 6
1 0 3
0 0 0
1 1
1 2
1 3
2 1
2 2
2 3

输出示例：
1
2
3
Unknown
Unknown
Unknown
"""